A Turtle compiler.  The turtle language is described at 
http://cs.anu.edu.au/students/comp3610.2009/assignments/Assignment2-Turtle.pdf


Usage: turtle [options] [file]...
Options:
  -o FILE  --output=FILE  output FILE
  -m MODE  --mode=MODE    mode={parse|desugar|disasm|binary}


Turtle can read from and write to files, or to stdin and stdout.  If
no file is specified on the command-line, stdin is assumed for input.
If the -o option is omitted, stdout is assumed for output.


Turtle can produce output from various stages of the compilation
process.  The following compilation modes are supported:
  parse:   The input is only parsed for grammatic correctness
  deusgar: The input is parsed, and transformed into PDPlot's core
  	   language
  disasm:  The input is compiled, but the result is outputted in
  	   an assesmbly code like format
  binary:  The compiled input is outputted in as ASCII 16-bit words

If no mode is specified, binary mode is assumed.


Examples:
	bin/./turtle -o test0.p tests/test0.t
	cat tests/test0.t | bin/./turtle
	bin/./turtle -m desugar tests/test0.t


Notable variations from the language specification include:
  * addition of usual comparison operators (>, >=, <=, !=) 
  * allow builtin drawing functions up and down to have trailing empty
  parens 
  * functions can be called before they are declared, without the need
  for pre-declarations. 
  * whitespace is completely arbitrary - newlines are interpretted in
  the same way as spaces

Author: 
Francis Markham (u2546226)
fmarkham@gmail.com
COMP3610, 2009
